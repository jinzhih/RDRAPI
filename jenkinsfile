/*****************************************************************
// Project3 backend
******************************************************************/
pipeline {

    environment {
            registry = "garrydevops/test"
            registryCredential = 'dockerhub'
            dockerImage = ''
    }

    agent any
    
    stages {
       
        stage('Building Docker Image') {
            steps {configFileProvider([configFile(fileId: 'fe963688-4be3-4ea8-9212-d7bdafc2c195', targetLocation: '/var/jenkins_home/workspace/project3-backend/')]){
                    sh 'pwd'
                    sh 'ls'
                    script {
                        dockerImage = docker.build registry + ":$BUILD_NUMBER"

                        }
                    }
                 }   
            }

        stage('Deploying Docker Image to Dockerhub') {
            steps {
                    script {
                        docker.withRegistry('', registryCredential) {
                        dockerImage.push()

                            }
                        }
                    }
            }

        stage('Cleaning Up') {
            steps{
                    sh "docker rmi --force $registry:$BUILD_NUMBER"
                    
                    }
            }

        stage('ssh ec2') {
            steps{
                    sshagent(credentials: ['sshec2']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no -l ec2-user 3.25.70.196 docker rm -f myweb                    
                        ssh -o StrictHostKeyChecking=no -l ec2-user 3.25.70.196 docker pull garrydevops/test:"$BUILD_NUMBER"
                        ssh -o StrictHostKeyChecking=no -l ec2-user 3.25.70.196 docker run --name myweb -p 3000:3000 -d --restart=always garrydevops/test:$BUILD_NUMBER
                        ssh -o StrictHostKeyChecking=no -l ec2-user 3.25.70.196 docker image prune -f -a
                        ssh -o StrictHostKeyChecking=no -l ec2-user 3.25.70.196 docker ps                        
                       '''

                    }

                }
            } 
    }
}